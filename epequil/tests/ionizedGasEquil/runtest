#!/bin/sh
#
#
function cleanup {
  if test -e runInProgress.txt
  then
    /bin/rm -f runInProgress.txt
    echo "  Run Interrupted: " `date` > runBad
    /bin/rm -f runGood
  fi
  exit 0
}
#############################################################################################################################
#
#  Check the file flag to see if a run is in progress
#
if test -f runInProgress.txt
then
  if test $fff == '0'
  then
    echo 'Runner ' $$ ': Test skipped due to runInProgress.txt flag: ' `pwd`
    echo '               Remove the flag file if you want to run the test'
    exit 0
  fi
fi
echo $$ > runInProgress.txt
#
#  trap interrupt and signals. 
#
trap cleanup INT TERM TSTP QUIT

######################################################################

/bin/rm  -f output.txt outputa.txt


#################################################################
#
#################################################################
CANTERA_DATA=${CANTERA_DATA:=../../data/inputs}; export CANTERA_DATA

CANTERA_BIN=${CANTERA_BIN:=../../bin}
./ionizedGasEquil > output.txt
retnStat=$?
if [ $retnStat != "0" ]
then
  temp_success="0"
  echo "ionizedGasEquil returned with bad status, $retnStat, check output"
fi

names=gas*Data.csv
names_b=gas*Data_blessed.csv
data=($names)
data_b=($names_b)

retnTotal=0
for((i=0;i<${#data[*]};i++))
  do
  csvdiff -r 1.0E-5 ${data_b[$i]} ${data[$i]} > diff_${data[$i]}
  csvStat[$i]=$?
  if test ${csvStat[$i]} != "0"
      then
      retnTotal=1
      echo "Unsuccessful test comparison on "`pwd`
      echo "      csv files are different - see diff_"${data[$i]}
  fi
done
diff -w output.txt output_blessed.txt > diff_test.out
retnStat=$?


if [ $retnTotal = "0" ] 
then
  echo "successful test comparison on "`pwd`" test"
  echo "  Test Passed: " `date` > runGood
  /bin/rm -f runBad
else
  echo "unsuccessful test comparison on "`pwd`" test see gasData_txtdiff.txt and gasData_csvdiff.txt"
  echo "  Test Failed: " `date` > runBad
  /bin/rm -f runGood
fi

/bin/rm -f  runInProgress.txt
exit 0

