#!/bin/sh
#
# MAKEFILE for Electrode/tests/LiCoO2_LiIonCathode_CSTR_thermal
#          This is also the template directory for the most up-to-date treatment
#
# Copywrite 2004 Sandia Corporation. Under the terms of Contract
# DE-AC04-94AL85000, there is a non-exclusive license for use of this
# work by or on behalf of the U.S. Government. Export of this program
# may require a license from the United States Government.
#
.SUFFIXES: .d

PROGRAM = LiCoO2_Cathode_thermal
TESTNAME = LiCoO2_LiIonCathode_CSTR_thermal

BLESSED_FILES = good_out.txt soln_0_0_blessed.xml LiCoO2_globalResults_blessed.csv 

DATA = cathode.inp problem_setup.sh \
       ECsoln_ion.xml LiCoO2Cathode_electrode.xml LiCoO2_Margules_1.xml Li_Metal.xml \
       metal_Li_LiIon_electrons.xml README.txt

TEST_RESULTS = out.txt LiCoO2_intResults_0_0.csv LiCoO2_globalResults_0_0.csv soln_0_0.xml

TEST_INTERMEDIATE_FILES = runInProgress.txt runBad runGood diff_out.txt diff_csv.txt err_out.txt  \
                          diff_summary.txt diff_xml.txt

TEST_FLAGS = runGood runBad runInProgress.txt testTime.txt

all: .dependsT $(PROGRAM)
#
################################################################################################################
#                          Setup The Cantera Directory locations
################################################################################################################
#
PURIFY=@PURIFY@
#
# These links are to Cantera's install space
#
CT_INCROOT =  @ct_incroot@
#
# Bring in the Cantera includes through the .mak file
#
include $(CT_INCROOT)/cantera/Cantera.mak
#
# Setup the util_src library for inclusion in this project
#
UTILSRC_DIR = ../../../util_src/src
UTILSRC_DEP = $(UTILSRC_DIR)/libutil_src.a
UTILSRC     = -L$(UTILSRC_DIR) -lutil_src
#
# Set up the Cantera addition library
#
CTPADDS_DIR = ../../../ctpadds/src
CTPADDS_DEP = $(CTPADDS_DIR)/libctpadds.a
CTPADDS_LIB = -L$(CTPADDS_DIR) -lctpadds
#
# Set up the Cantera Application Base directory
#
CTAPPLBASE_DIR = ../../src
CTAPPLBASE_DEP =   $(CTAPPLBASE_DIR)/libElectrode.a
CTAPPLBASE_LIB = -L$(CTAPPLBASE_DIR) -lElectrode
#
###################################################################################################################
#                    Set up the various local and global defines
##################################################################################################################
#
LDEFINES = -DDEBUG 
GDEFINES =
#
# Set up the global include directory macro
#
INCLUDE_DIRS = $(CANTERA_TOTAL_INCLUDES) -I$(CTAPPLBASE_DIR) -I$(UTILSRC_DIR)  -I$(CTPADDS_DIR) 
#
##################################################################################################################
#                          SECTION TO SET UP COMPILER RULES 
##################################################################################################################
#
# the C++ compiler
#
CXX = @CXX@
CCFLAGS =  $(LDEFINES) $(INCLUDE_DIRS) $(GDEFINES)
CXXFLAGS = @CXXFLAGS@
#
# C compiler
#
CC = @CC@
CFLAGS = @CXXFLAGS@
#
# Both the C and C++ compiler predefines
#
CCFLAGS =  $(GDEFINES) $(INCLUDE_DIRS) $(LDEFINES) 
#
.cpp.o:
	$(PURIFY) $(CXX) $(CXXFLAGS) $(CCFLAGS) -c $<
#
##################################################################################################################
#                        Section to Set Up Linking Rules
##################################################################################################################
#
CXXLDR = $(CXX)
LCXX_FLAGS = @LCXX_FLAGS@
LCXX_END_LIBS = @LCXX_END_LIBS@
#
OBJ = $(PROGRAM).o
$(OBJ): Makefile
#
$(PROGRAM): $(OBJ) $(OBJ_CANTERA_ADDONS) $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(CTAPPLBASE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o $(PROGRAM) $(OBJ) \
	          $(OBJ_CANTERA_ADDONS)  \
                  $(CTAPPLBASE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 
#
#######################################################################################################################
#                          SECTION TO SET UP DEPENDS RULES
#######################################################################################################################
#
.cpp.d:
	@CXX_DEPENDS@ $(CXXFLAGS) $(CCFLAGS) -c $*.cpp > $*.d

DEPENDS = $(OBJ:.o=.d) 

$(DEPENDS): Makefile

depends:
	$(RM) $(DEPENDS)
	$(MAKE) .dependsT

.dependsT: $(DEPENDS)
	cat *.d > .depends
	@ touch .dependsT

########################################################################################################################
#                        SECTION TO SET UP TEST RUNS
########################################################################################################################

test: testTime.txt
	@$(MAKE) -s
	@echo -n 'Checking need to run test ' $(TESTNAME) ': '
	@$(MAKE) -q -s  runGood ; ss=$$? ; if test $$ss = "0" ; then echo '   NOT NEEDED' ; else  $(MAKE) -s runGood ; fi

runGood: $(PROGRAM) $(DATA) Makefile $(BLESSED_FILES)
	@echo 'RUNNING TEST ' $(TESTNAME)
	if test -e runBad ; then \
            if  test `date -r testTime.txt  +"%s"` -le `date -r runBad  +"%s"` ; then \
               echo '        Bad test result dated, ' `date -r runBad` ', is current' \
            ; else \
               ../runtest_Electrode \
            ; fi \
        ; else \
            ../runtest_Electrode \
        ; fi

testTime.txt:  $(PROGRAM) $(DATA) Makefile $(BLESSED_FILES)
	touch testTime.txt

rebaseline:
	cp out.txt                   good_out.txt
	cp soln_0_0.xml              soln_0_0_blessed.xml
	cp LiCoO2_intResults_0_0.csv LiCoO2_intResults_blessed.csv

##########################################################################################################################
#          SECTION TO SET UP CLEAN RULES
##########################################################################################################################

clean_test:
	$(RM) $(TEST_INTERMEDIATE_FILES)
	$(RM) $(TEST_RESULTS)
	$(RM) $(TEST_FLAGS)

clean:
	$(RM) $(TEST_INTERMEDIATE_FILES) $(TEST_FLAGS)
	$(RM) *.o  .depends *.d *~  $(PROGRAM) .dependsT *breakpoints

clean_dist:
	$(MAKE) clean
	$(MAKE) clean_test


ifeq ($(wildcard .depends), .depends)
include .depends
endif

