#!/bin/sh
#
# Copywrite 2004 Sandia Corporation. Under the terms of Contract
# DE-AC04-94AL85000, there is a non-exclusive license for use of this
# work by or on behalf of the U.S. Government. Export of this program
# may require a license from the United States Government.
#
.SUFFIXES: .d

PROGRAM = MCMBAnode_SimpleDiff_4
TESTNAME = MCMBAnode_LiIon_SimpleDiff_4_cV

BLESSED_FILES = good_out.txt soln_0_0_blessed.xml \
                MCMB_globalResults_blessed_0_0.csv  MCMB_intResults_blessed_0_0.csv  

DATA = anode.inp problem_setup.sh \
       ECsoln_ion.xml  Li_Metal.xml  MCMBAnode_electrode.xml  MCMB_RedlichKister.xml  metal_Li_LiIon_electrons.xml  

TEST_RESULTS = out.txt soln_0_0.xml MCMB_intResults_0_0.csv   MCMB_globalResults_0_0.csv ls soln_Restart_1_0_0.xml

TEST_INTERMEDIATES = diff_csv.txt diff_icsv.txt diff_gcsv.txt diff_out.txt capCheck_0.txt err_out.txt  \
                     diff_summary.txt diff_xml.txt diff_s43r_xml.txt output_test_blessed.txt

TEST_FLAGS = runGood runBad runInProgress.txt

all: .depends $(PROGRAM) output_test_blessed.txt
#
################################################################################################################
#                          Setup The Zuzax Directory locations
################################################################################################################
#
PURIFY=@PURIFY@
#
# These links are to Cantera's install space
#
CT_INCROOT = @ct_incroot@
#
# Bring in the Zuzax includes through the .mak file
#
include $(CT_INCROOT)/zuzax/Zuzax.mak
#
#  Flag to indicate whether Zuzax was compiled with DEBUG_MODE enabled
#
DEBUG_MODE_ENABLED = @Zuzax_Debug_Mode_Enabled@
#
# Setup the util_src library for inclusion in this project
#
UTILSRC_DIR = ../../../util_src/src
UTILSRC_DEP = $(UTILSRC_DIR)/libutil_src.a
UTILSRC     = -L$(UTILSRC_DIR) -lutil_src

# Set up the Zuzax addition library

CTPADDS_DIR = ../../../ctpadds/src
CTPADDS_DEP = $(CTPADDS_DIR)/libctpadds.a
CTPADDS_LIB = -L$(CTPADDS_DIR) -lctpadds
#
# Set up the Zuzax Application Base directory
#
CTAPPLBASE_DIR = ../../src
CTAPPLBASE_DEP =   $(CTAPPLBASE_DIR)/libElectrode.a
CTAPPLBASE_LIB = -L$(CTAPPLBASE_DIR) -lElectrode

###################################################################################################################
#                    Set up the various local and global defines
##################################################################################################################

LDEFINES = -DDEBUG 
GDEFINES =

INCLUDE_DIRS = $(CANTERA_TOTAL_INCLUDES) -I$(CTAPPLBASE_DIR) -I$(UTILSRC_DIR)  -I$(CTPADDS_DIR) 
#
##################################################################################################################
#                          SECTION TO SET UP COMPILER RULES 
##################################################################################################################
#
# the C++ compiler
#
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
#
# C compiler
#
CC = @CC@
CFLAGS = @CXXFLAGS@
#
# Both the C and C++ compiler predefines
#
CCFLAGS = $(GDEFINES) $(INCLUDE_DIRS) $(LDEFINES) 

.cpp.o:
	$(PURIFY) $(CXX) $(CXXFLAGS) $(CCFLAGS) -c $<

.cpp.d:
	@CXX_DEPENDS@ $(CXXFLAGS) $(CCFLAGS) -c $*.cpp > $*.d

##################################################################################################################
#                        Section to Set Up Linking Rules
##################################################################################################################
#
CXXLDR = $(CXX)
LCXX_FLAGS = @LCXX_FLAGS@
LCXX_END_LIBS = @LCXX_END_LIBS@

OBJ = $(PROGRAM).o
$(OBJ): Makefile

$(PROGRAM): $(OBJ) $(OBJ_CANTERA_ADDONS) $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(CTAPPLBASE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o $(PROGRAM) $(OBJ) \
	          $(OBJ_CANTERA_ADDONS)  \
                  $(CTAPPLBASE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

DEPENDS = $(OBJ:.o=.d) 

$(DEPENDS): Makefile

$(OBJ): Makefile

depends:
	$(RM) $(DEPENDS)
	$(MAKE) .depends

.depends: $(DEPENDS)
	cat *.d > .depends

########################################################################################################################
#                        SECTION TO SET UP TEST RUNS
########################################################################################################################
#
test: output_test_blessed.txt
	@$(MAKE) -s
	@echo -n 'Checking need to run test ' $(TESTNAME) ': '
	@$(MAKE) -q -s  runGood ; ss=$$? ; if test $$ss = "0" ; then echo '   NOT NEEDED' ; else  $(MAKE) -s runGood ; fi
#
output_test_blessed.txt: good_out.txt good_out_noDbg.txt Makefile
	@ if test $(DEBUG_MODE_ENABLED) -eq 1 ; then \
           cp good_out.txt output_test_blessed.txt ; \
        else \
           cp good_out_noDbg.txt output_test_blessed.txt ; \
        fi
#
runGood: $(PROGRAM) $(DATA) Makefile $(BLESSED_FILES)
	@echo 'RUNNING TEST ' $(TESTNAME)
	../runtest_Electrode

rebaseline:
	cp soln_0_0.xml              soln_0_0_blessed.xml
	cp  MCMB_intResults_0_0.csv  MCMB_intResults_blessed_0_0.csv 
	cp  MCMB_globalResults_0_0.csv MCMB_globalResults_blessed_0_0.csv 
	@ if test $(DEBUG_MODE_ENABLED) -eq 1 ; then \
           cp out.txt good_out.txt  ; \
        else \
           cp out.txt good_out_noDbg.txt ; \
        fi


test_clean:
	$(RM) $(TEST_INTERMEDIATES) $(TEST_FLAGS) $(TEST_RESULTS)
	$(RM) soln_Restart_*0.xml

clean_test:
	$(RM) $(TEST_INTERMEDIATES) $(TEST_FLAGS) $(TEST_RESULTS) 
	$(RM) soln_Restart_*0.xml

clean:
	$(RM) $(TEST_FLAGS)
	$(RM) *.o  .depends *.d *~  $(PROGRAM)  $(TEST_FLAGS) soln_Restart*0.xml

dist_clean:
	$(MAKE)  clean_test
	$(MAKE)  clean

clean_dist:
	$(MAKE)  clean_test
	$(MAKE)  clean

#######################################################################################################################
ifeq ($(wildcard .depends), .depends)
include .depends
endif
