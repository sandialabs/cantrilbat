#!/bin/sh
#
#  Makefile.in: 
#     Makefile for mpequil
#
# $Id: Makefile.in,v 1.1 2012/02/22 20:41:16 hkmoffa Exp $
#
#
#  Build mpequil through the CANTERA_INSTALL directories.
#
# Copywrite 2004 Sandia Corporation. Under the terms of Contract
# DE-AC04-94AL85000, there is a non-exclusive license for use of this
# work by or on behalf of the U.S. Government. Export of this program
# may require a license from the United States Government.
#

.SUFFIXES: .d

PROGRAM =   LiCoO2_SimpleDiff_Jac
TESTNAME =  LiCoO2_SimpleDiff_Jac

BLESSED_FILES = good_out.txt  outputTable_blessed.csv  soln_0_0_blessed.xml

DATA = cathode.inp ECsoln_ion.xml   problem_setup.sh

TEST_INTERMEDIATES = output_test_blessed.txt

OBJ = $(PROGRAM).o

##########################################################################
#           Setup The Zuzax Directory locations
#########################################################################

PURIFY=@PURIFY@

# These links are to Cantera's install space
CT_INCROOT =  @ct_incroot@

#
# Bring in the Zuzax includes through the .mak file
#
include $(CT_INCROOT)/zuzax/Zuzax.mak
#
#  Flag to indicate whether Zuzax was compiled with DEBUG_MODE enabled
#
DEBUG_MODE_ENABLED = @Zuzax_Debug_Mode_Enabled@
#
# Source tree base for cantera_apps
#
CT_ROOT = @ct_prefix@
UTILSRC_DIR = ../../../util_src/src
UTILSRC_INC = $(UTILSRC_DIR)
UTILSRC_DEP = $(UTILSRC_DIR)/libutil_src.a
UTILSRC     = -L$(UTILSRC_DIR) -lutil_src

#
# Set up the Zuzax addition library
#
CTPADDS_DIR =  ../../../ctpadds/src
CTPADDS_INC = $(CTPADDS_DIR)
CTPADDS_DEP = $(CTPADDS_DIR)/libctpadds.a
CTPADDS_LIB = -L$(CTPADDS_DIR) -lctpadds
#
# Set up the Zuzax Application Base directory
#
ELECTRODE_DIR = ../../src
ELECTRODE_INC = ../../src
ELECTRODE_DEP =  $(ELECTRODE_DIR)/libElectrode.a
ELECTRODE_LIB = -L$(ELECTRODE_DIR) -lElectrode
#
#########################################################################
# Set up the various local and global defines
########################################################################
LDEFINES = -DDEBUG
GDEFINES =
#
# Set up the global include directory macro
#
INCLUDE_DIRS = $(CANTERA_TOTAL_INCLUDES) -I$(ELECTRODE_INC) -I$(UTILSRC_INC)  -I$(CTPADDS_INC)

all: .depends $(PROGRAM) output_test_blessed.txt

LDR = $(F77LDR)
LDRFLAGS = $(F77LDRFLAGS)
LDRFLAGS_DEBUG = -g -y $(FFLAGS_BSD)

CCFLAGS =   $(LDEFINES) $(INCLUDE_DIRS) $(GDEFINES)

OBJ_ANODE =  $(OBJ)

############################################################################
# section to set up compiler rules
###########################################################################
#
# the C++ compiler
#
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
LCXX_FLAGS = @LCXX_FLAGS@
LCXX_END_LIBS = @LCXX_END_LIBS@
CXXLDR = $(CXX)
#
# C compiler
#
CC = @CC@
CFLAGS = @CXXFLAGS@
#
# Both the C and C++ compiler predefines
#
CCFLAGS =  $(GDEFINES) $(INCLUDE_DIRS) $(LDEFINES) 
#
.c.o:
	$(PURIFY) $(CC) $(CFLAGS) $(CCFLAGS) -c $<
.cpp.o:
	$(PURIFY) $(CXX) $(CXXFLAGS) $(CCFLAGS) -c $<

.f:
	$(F77) $(FFLAGS) -c $<
	$(F77LDR) $(F77LDRFLAGS) $*.o -o $@

############################################################################
# section to set up depends
###########################################################################
DEPENDS = $(OBJ_ANODE:.o=.d) 

.f.d:
	echo "$*.o: $*.f" > $*.d

.cpp.d:
	@CXX_DEPENDS@ $(CXXFLAGS) $(CCFLAGS) -c $*.cpp > $*.d

.c.d:
	@CXX_DEPENDS@ $(CXXFLAGS) $(CCFLAGS) -c $*.c > $*.d

depends:
	$(RM) $(DEPENDS)
	$(MAKE) .depends

.depends: $(DEPENDS)
	cat *.d > .depends

test: output_test_blessed.txt
	@$(MAKE) -s
	@echo -n 'Checking need to run test ' $(TESTNAME) ': '
	@$(MAKE) -q -s  runGood ; ss=$$? ; if test $$ss = "0" ; then echo '   NOT NEEDED' ; else  $(MAKE) -s runGood ; fi

output_test_blessed.txt: good_out.txt good_out_noDbg.txt Makefile
	@ if test $(DEBUG_MODE_ENABLED) -eq 1 ; then \
           cp good_out.txt output_test_blessed.txt ; \
        else \
           cp good_out_noDbg.txt output_test_blessed.txt ; \
        fi


runGood: $(PROGRAM) $(DATA) Makefile $(BLESSED_FILES)
	@echo 'RUNNING TEST ' $(TESTNAME)
	../../tests/runtest_Electrode

rebaseline:
	cp LiCoO2_intResults_0_0.csv      LiCoO2_intResults_0_0_blessed.csv
	cp LiCoO2_globalResults_0_0.csv   LiCoO2_globalResults_0_0_blessed.csv 
	cp outputTable.csv                outputTable_blessed.csv
	cp soln_0_0.xml                   soln_0_0_blessed.xml
	@ if test $(DEBUG_MODE_ENABLED) -eq 1 ; then \
           cp out.txt good_out.txt  ; \
        else \
           cp out.txt good_out_noDbg.txt ; \
        fi


##############################################################################

$(OBJ_MPEQUIL): Makefile
$(DEPENDS): Makefile

$(PROGRAM): $(OBJ_ANODE) $(OBJ_CANTERA_ADDONS) $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(ELECTRODE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o $(PROGRAM) $(OBJ_ANODE) \
	          $(OBJ_CANTERA_ADDONS)  \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

LiCoO2_Cathode_Radial_cc: LiCoO2_Cathode_Radial_cc.o $(OBJ_CANTERA_ADDONS) $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(ELECTRODE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o LiCoO2_Cathode_Radial_cc LiCoO2_Cathode_Radial_cc.o \
                  $(OBJ_CANTERA_ADDONS)  \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

LiCoO2Thermo: LiCoO2Thermo.o $(OBJ_CANTERA_ADDONS) $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(ELECTRODE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o LiCoO2Thermo LiCoO2Thermo.o  \
	          $(OBJ_CANTERA_ADDONS)  \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

LiCoO2:	LiCoO2.o
	 $(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o LiCoO2 LiCoO2.o \
                  $(OBJ_CANTERA_ADDONS)  \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 


#############################################################################
#          INSTALL RULES
##############################################################################

ifeq ($(wildcard .depends), .depends)
include .depends
endif



clean:
	$(RM) *.o  .depends *.d *~  $(PROGRAM) LiCoO2_Cathode_Radial_cc LiCoO2Thermo LiCoO2
	$(RM) ${PROG} anode_intSurf diff_csv.txt diff_out.txt diff_tout.txt err_out.txt ccout.txt

test_clean:
	$(RM) LiCoO2_intResults_0_0.csv output_test_blessed.txt

