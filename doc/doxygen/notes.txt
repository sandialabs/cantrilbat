doxygen usage.


   It seems that the recent doxygen doesn't like *'s at the start of
comment lines. It get's confused when I added a \verbatim section to
the .h group files. Not sure how to fix this other than to take the
*'s out.



Proper use of TAGFILES:  the = argment must point to the html output of
              the external doxygen documentation. for example:



UTPUT_DIRECTORY  = proj
INPUT             = proj/src
TAGFILES          = ext1/ext1.tag=../../ext1/html \
                    ext2/ext2.tag=../../ext2/html 

where 

    root>
      +- proj
      |   +- html               HTML output directory for proj
      |   +- src                sources for proj
      |   |- proj.cpp
      +- ext1
      |   +- html               HTML output directory for ext1
      |   |- ext1.tag           tag file for ext1
      +- ext2
      |   +- html               HTML output directory for ext2
      |   |- ext2.tag           tag file for ext2
      |- proj.cfg               doxygen configuration file for proj
      |- ext1.cfg               doxygen configuration file for ext1
      |- ext2.cfg               doxygen configuration file for ext2

Verified that this works.


------------------------------------------------------------------------------------------

File List
  The proper use of the block at the top of files is listed below as an
example:

/**
 * @file BaseEntry.h
 *   Declarations for the base object, BaseEntry, which is inherited by all
 *   LineEntry and BlockEntry classes.
 */

  Note that all words after the first period are ignored in the "Files" index
They are included in the "Detailed Description" part of the Files. I think
that we should be working towards not using the "Detailed Description" part of
the Files tab.
  
  Note that the example includes a 2 character indentation between the @file
line and the subsequent lines. This is needed to avoid doxygen putting a box
around the text in the "Files" tab. The box destroys the look and feel of the 
"Files" tab. I have no idea why doxygen puts the box there. It just does.






