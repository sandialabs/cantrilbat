#!/bin/sh

############################################################################
#
#  Makefile to compile and link a C++ application to 
#  Cantera.
#
#############################################################################

# addition to suffixes
.SUFFIXES : .d

# the name of the executable program to be created
PROG_NAME = LiIon_PorousBat

# the object files to be linked together. List those generated from Fortran
# and from C/C++ separately
OBJS = LiIon_PorousBat.o  m1d_DomainLayout_LiIon_PorousBat.o \
        m1d_porousLiIon_Cathode_dom1D.o  m1d_porousLiIon_Separator_dom1D.o \
        m1d_porousLiIon_Anode_dom1D.o m1d_BDD_porAnode_LiIon.o  m1d_BDD_porCathode_LiIon.o \
        m1d_BDD_porSeparator_LiIon.o

TOBJS =  $(OBJS) 

#############################################################################
# These links are to Cantera's install space
ZUZAX_INCROOT =  @ct_incroot@
ZUZAX_INSTALL_DIR = @ct_prefix@
ZUZAX_APPS_INSTALL_DIR = @cta_prefix@
#
# Bring in the Zuzax includes through the .mak file
#
include $(ZUZAX_INCROOT)/zuzax/Zuzax.mak
#
TRILINOS_DIR=@trilinos_root@
#
TRILINOS_INC_DIR=$(TRILINOS_DIR)/include
TRILINOS_INC=-I$(TRILINOS_DIR)/include
TRILINOS_LIB=-L$(TRILINOS_DIR)/lib  -lamesos

include $(TRILINOS_INC_DIR)/Makefile.export.Amesos
include $(TRILINOS_INC_DIR)/Makefile.export.Ifpack

MPI_INCLUDE_DIR=@mpi_include_dir@

UTILSRC_DIR=../../util_src/src
UTILSRC_LIB=-L$(UTILSRC_DIR) -lutil_src
UTILSRC_DEP=$(UTILSRC_DIR)/libutil_src.a


CTPADDS_DIR = ../../ctpadds/src
APPL_BASE_DIR= ../../Electrode/src
APPL_BASE_INC= -I$(APPL_BASE_DIR)
APPL_BASE_DEP= $(APPL_BASE_DIR)/libElectrode.a $(CTPADDS_DIR)/libctpadds.a
APPL_BASE_LIB= -L$(APPL_BASE_DIR) -lElectrode  -L$(CTPADDS_DIR) -lctpadds

M1D_BASE_INC= -I../src_CanteraElectrode -I../src
M1D_BASE_DEP= ../src/libm1d.a ../src_CanteraElectrode/libm1dcantera.a
M1D_BASE_LIB= -L../src_CanteraElectrode -lm1dcantera -L../src -lm1d

#
####################################################################################################3
#
AMESOS_LINE=$(Amesos_LIBRARY_DIRS) $(Amesos_LIBRARIES) $(Ifpack_LIBRARIES)

SUPERLUDIST_DIR=@superludist_library_dir@
SUPERLUDIST_LINE=-L$(SUPERLUDIST_DIR) @superludist_library@

UMFPACK_DIR=@umfpack_library_dir@
UMFPACK_LINE=-L$(UMFPACK_DIR) @umfpack_library@

PARMETIS_DIR=@parmetis_library_dir@
PARMETIS_LINE=-L$(PARMETIS_DIR) @parmetis_library@

LAPACK_DIR=@lapack_library_dir@
LAPACK_LINE=-L$(LAPACK_DIR)  @lapack_library@

BLAS_DIR=@blas_library_dir@
BLAS_LINE=-L$(BLAS_DIR) @blas_library@

Y12M_DIR=@y12m_library_dir@
Y12M_LINE=-L$(Y12M_DIR) @y12m_library@

TRILINOS_LIB_LINE=$(AMESOS_LINE)  $(SUPERLUDIST_LINE) $(UMFPACK_LINE) $(PARMETIS_LINE) $(Y12M_LINE)  $(LAPACK_LINE) $(BLAS_LINE)

# Check to see whether we are in the msvc++ environment
os_is_win = @OS_IS_WIN@

# the C++ compiler
CXX = @MPICXX@
#
# The directory where Zuzax include files may be found.
#

INCLUDE_DIRS = $(M1D_BASE_INC) -I../src_LiIon_infPorousBat $(APPL_BASE_INC) \
               $(ZUZAX_TOTAL_INCLUDES) \
               $(TRILINOS_INC) \
               -I$(MPI_INCLUDE_DIR) \
               -I$(UTILSRC_DIR) -I../..

# C++ compile flags
GDEFINES=@CXX_GDEFINES@
LDEFINES= -DINTEGRATED_ELECTRODE
# LDEFINES=-DDEBUG_HKM
# LDEFINES=-DDELTASHEAT_ZERO
# LDEFINES=-DDO_INIT_CALC
# LDEFINES= -DDEBUG_PRINT_CELL_TABLES
# LDEFINES=-DDEBUG_OLD_CC_FLOW_CONDITION
#      Debug the matrix structure
# LDEFINES=-DDEBUG_MATRIX_STRUCTURE
CXX_FLAGS = @CXXFLAGS@ -Woverloaded-virtual  $(INCLUDE_DIRS) $(GDEFINES) -DUSE_VCSNONIDEAL $(LDEFINES) 

# Ending C++ linking libraries
LMPICXX_END_LIBS = @LMPICXX_END_LIBS@

# flags passed to the C++ compiler/linker for the linking step
LCXX_FLAGS = @CXXFLAGS@ $(INCLUDE_DIRS) 

# How to compile C++ source files to object files
.cpp.o:
	$(CXX) $(CXX_FLAGS) -c $< 

# How to compile the dependency file
.cpp.d:
	@CXX_DEPENDS@  $(CXX_FLAGS) $< > $@

# List of dependency files to be created
DEPENDS=$(TOBJS:.o=.d)

# Program Name
PROGRAM = $(PROG_NAME)$(EXE_EXT)

all:  .depends $(PROGRAM)

$(TOBJS) $(DEPENDS): Makefile

rebaseline:

$(PROGRAM): $(OBJS) $(M1D_BASE_DEP)  $(ZUZAX_CORE_LIBS_DEP) $(UTILSRC_DEP) \
            $(APPL_BASE_DEP) 
	$(CXX) -o $(PROGRAM) \
		  $(OBJS)  \
                  $(LCXX_FLAGS) $(LINK_OPTIONS) \
		  $(M1D_BASE_LIB) \
		  $(APPL_BASE_LIB) \
                  $(ZUZAX_TOTAL_LIBS) \
		  $(UTILSRC_LIB) \
                  $(TRILINOS_LIB_LINE) \
		  -lgfortran $(LMPICXX_END_LIBS)

install:
	@INSTALL@ -d @cta_bindir@
	@INSTALL@ -c $(PROGRAM) @cta_bindir@

# depends target -> forces recalculation of dependencies
depends:
	$(RM) *.d .depends
	$(MAKE) .depends

.depends: $(DEPENDS)
	cat *.d > .depends

test:

clean:
	$(RM) $(OBJS) *.o $(PROGRAM) $(DEPENDS) .depends 
	(if test -d SunWS_cache ; then \
           $(RM) -rf SunWS_cache ; \
         fi )

ifeq ($(wildcard .depends), .depends)
include .depends
endif

