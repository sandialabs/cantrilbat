#!/bin/sh
#
#  Makefile.in: 
#
#
# Copywrite 2004 Sandia Corporation. Under the terms of Contract
# DE-AC04-94AL85000, there is a non-exclusive license for use of this
# work by or on behalf of the U.S. Government. Export of this program
# may require a license from the United States Government.
#

TEST_NAME = LiIon_MCMB_LiCoO2_inerts

PROGRAM =   LiIon_PorousBat
BPROGRAM =  @top_builddir@/1Delectrode/src_LiIon_PorousBat/$(PROGRAM)
RUNTEST = runtest
BRUNTEST = @top_builddir@/1Delectrode/test_suite/$(RUNTEST)

BLESSED_FILES = good_out.txt BulkDomain1D_0_blessed.dat  BulkDomain1D_2_blessed.dat  \
                SurDomain1D_0_blessed.dat  SurDomain1D_2_blessed.dat  timeDep_IV_blessed.dat \
                BulkDomain1D_1_blessed.dat  solution_blessed.xml        SurDomain1D_1_blessed.dat  SurDomain1D_3_blessed.dat

DATA = ECsoln_ion.xml               LiCoO2_Margules_1.xml  MCMBAnode_electrode.xml  metal_Li_LiIon_electrons.xml \
       LiCoO2Cathode_electrode.xml  Li_Metal.xml           MCMB_RedlichKister.xml   MgO.xml \
       anode.inp cathode.inp   LiIon_PorousBat.inp

TEST_RESULTS = SurDomain1D_0.dat SurDomain1D_1.dat SurDomain1D_2.dat  timeDep_IV.dat \
               solution.xml BulkDomain1D_0.dat  BulkDomain1D_1.dat  BulkDomain1D_2.dat  \
               out_raw.txt out.txt accumulatedElectricalOutput.txt accumulatedHeatSource.txt \
               stepwiseElectricalOutput.txt   stepwiseHeatSource.txt

TEST_INTERMEDIATES = diff_* err_out.txt

TEST_FLAGS = runGood runBad runInProgress.txt 

all: $(PROGRAM) $(RUNTEST)

$(PROGRAM): $(BPROGRAM) Makefile
	/bin/rm -f $(PROGRAM)
	ln -s $(BPROGRAM) .

$(RUNTEST): $(BRUNTEST) Makefile
	/bin/rm -f $(RUNTEST)
	ln -s $(BRUNTEST) .

test: 
	@ggg=`pwd` ; echo -n 'Checking need to run test ' `pwd` ': '
	@gmake -q -s  runGood ; ss=$$? ; if test $$ss = "0" ; then echo '   NOT NEEDED' ; else  gmake -s runGood ; fi

#
# Executable will be found by runtest so took PROGRAM out
#
runGood: $(DATA) Makefile $(BLESSED_FILES)  $(BPROGRAM) $(BRUNTEST) $(PROGRAM)
	@ggg=`pwd` ; echo 'RUNNING TEST ' `basename $$ggg`
	$(RUNTEST)	

rebaseline:
	./rebaseline.sh

test_clean:
	$(RM) $(TEST_FLAGS) $(TEST_RESULTS) $(TEST_INTERMEDIATES)

clean_test:
	$(RM)  $(TEST_FLAGS)  $(TEST_RESULTS) $(TEST_INTERMEDIATES)

clean:
	$(RM) $(TEST_FLAGS)  $(TEST_INTERMEDIATES)  $(PROGRAM) $(RUNTEST)

clean_flags:
	$(RM) $(TEST_FLAGS) $(TEST_RESULTS) $(TEST_INTERMEDIATES)

clean_dist:
	$(RM)  $(TEST_FLAGS) $(TEST_RESULTS) $(TEST_INTERMEDIATES)  $(PROGRAM) $(RUNTEST)

dist_clean:
	$(RM)  $(TEST_FLAGS) $(TEST_RESULTS) $(TEST_INTERMEDIATES)  $(PROGRAM) $(RUNTEST)

