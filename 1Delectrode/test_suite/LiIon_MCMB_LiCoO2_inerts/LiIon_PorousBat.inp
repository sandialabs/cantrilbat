##################################################################
#  vcs_Cantera   Command File
#
#   Master input file describing all of the options in the file
##################################################################
!-------------------------------------------------------------------------
! Title
!
!
!-------------------------------------------------------------------------
Title = One-Dimensional Thermal Battery Cell Model
!-------------------------------------------------------------------------
! Number of Cantera Files = int
!
!   Number of cantera files.  
!
!-------------------------------------------------------------------------
Number of Cantera Files = 2
!-------------------------------------------------------------------------
! Cantera File Name = [string] [ required ]
!
!  Must have a number of lines equal to the number entered on the
!  line "Number of Cantera Files"
!   Note, all phases found in each file will be included in the 
!   equilibrium calculation.
!-------------------------------------------------------------------------
Cantera File Name = ECsoln_ion.xml
Cantera File Name = MgO.xml
!-------------------------------------------------------------------------
!    Cross sectional Area = [double] (required)
!
!-------------------------------------------------------------------------
Coordinate System = rectilinear
Cross Sectional Area =  1.0E-4 m2
!---------------------------------------------------------------------------------------------------------
!
!     Heat Source Tracking - int (optional) (default = 0)
!
!   0 = Do not do any heat source tracking
!   1 = calculate heat sources, print them out, and have them available for external communication
!
!---------------------------------------------------------------------------------------------------------
Heat Source Tracking = 1
!---------------------------------------------------------------------------------------------------------
!
! Electrolyte Phase = [string] [ required ]
!
! Name of phase containing electrolyte description
! 
!-------------------------------------------------------------------------
Electrolyte Phase = ECDMC_LiPF6
!-------------------------------------------------------------------------
!
! Energy Equation Problem Type
!
!    List of available options
!          0  = None (default)
!          1 = Fixed
!          2 = Dirichlet Equation
!          3 = Enthalpy Equation
!          4 = Temperature Equation
!
!  If the problem type is None, then an isothermal problem is assumed and the temperature
!  is given by the temperature field above.
!
!  If a Fixed option is input, then the temperature field is given by a temperature
!  field that may potentially vary in space and time. The method for input of this temperature
!  field is unspecified as of now, until a concrete example is constructed.
!
!  If the problem type is "Dirichlet Eqeuation", then an alternative fixed equation is used.
!  Typically this would just impose a fixed temperature field option. However, the matrix
!  structure is the same as the full problem.
!
!  If the problem type is "Enthalpy Equation", the a full enthalpy equation is solved
!  for. Usually, the dependent variable is still the temperature.
!  The Temperature keyline field above is used to initialize the formulation where applicable.
!
!  If the problem type is "Temperature Equation", then the full energy equation in CpdT/dt formulation
!  is solved for. Note, this formulation doesn't actually solve for a conserved quantity, so it is
!  inferior to the enthalpy formulation in this respect
!
!--------------------------------------------------------------------------------------------------------
Energy Equation Problem Type = Enthalpy Equation
!--------------------------------------------------------------------------------------------------------
!
!     Heat Source Tracking - int (optional) (default = 0)
!
!   0 = Do not do any heat source tracking
!   1 = calculate heat sources, print them out, and have them available for external communication
!
!---------------------------------------------------------------------------------------------------------
Heat Source Tracking = 1
!---------------------------------------------------------------------------------------------------------
!
!     Resistance Tracking - int (optional) (default = 0)
!
!   0 = Do not do any resistance tracking
!   1 = calculate resistances for each domain, print them out, and have them available for external communication
!
!---------------------------------------------------------------------------------------------------------
Resistance Tracking = 1
!---------------------------------------------------------------------------------------------------------
! 
! Specify electrolyte phase mole fractions 
!-------------------------------------------------------------------------
START BLOCK Electrolyte Mole Fractions
       Li+   = 0.0780266
       PF6-  = 0.0780266
       ECDMC = 0.8439468
END BLOCK   Electrolyte Mole Fractions
!-------------------------------------------------------------------------
!
! Identify the separator phase
! 
!-------------------------------------------------------------------------
Separator Phase = MgO(S)
!-------------------------------------------------------------------------
!
! Specify the mass of the Separator Species in the Separator 
! units = [kg]
!-------------------------------------------------------------------------
Separator Mass = 2.2375E-3 g
!-------------------------------------------------------------------------
!
! Specify the thickness of the Separator 
! Units = [m]
!  This is h2 in the Dualfoil input deck
!-------------------------------------------------------------------------
Separator Thickness = 25.0E-6 
!-------------------------------------------------------------------------
!
! Specify the area of the Separator [m^2]
!-------------------------------------------------------------------------
Separator Area = 1.0 cm2
!-------------------------------------------------------------------------
!BLOCK FORMAT FOR SEPARATOR
!START BLOCK Separator
!   Species = MgO(S)
!   Cantera File = MgO.xml
!   Mass Fraction = 0.35
!END BLOCK Separator
!
!-------------------------------------------------------------------------
!
! Input Anode File = [string] [ required ]
!
! Name of input file containing anode description
! 
!-------------------------------------------------------------------------
Input Anode File = anode.inp
!-------------------------------------------------------------------------
!
! Input Cathode File = [string] [ required ]
!
! Name of input file containing anode description
! 
!-------------------------------------------------------------------------
Input Cathode File = cathode.inp
!---------------------------------------------------------------------------------------------------------
!
!      Electrical Conductivity of the Anode Electrode
!      This is the conductivity in the solid limit.  The effective conductivity is
!
!              volume_frac * sigma
!
!              Units are  S/m
!
!--------------------------------------------------------------------------------------------------------
Electrical Conductivity of the Anode Electrode = 100.0
!--------------------------------------------------------------------------------------------------------
!
!      Electrical Conductivity of the Cathode Electrode
!      This is the conductivity in the solid limit.  The effective conductivity is
!
!              volume_frac * sigma
!
!              Units are  S/m
!
!--------------------------------------------------------------------------------------------------------
Electrical Conductivity of the Cathode Electrode =  0.5
!--------------------------------------------------------------------------------------------------------
!
!   Anode Current Collector Thickness - double [m] optional (default = 0.0)
!
!        If this option is turned on, the boundary condition for constant voltage conditions is changed.
!        The boundary condition is turned into a Robin boundary condition.
!        The default resistance of the anode current collector is taken to be the resistance of copper.
!---------------------------------------------------------------------------------------------------------
! Anode Current Collector Thickness = 0.01 m
!---------------------------------------------------------------------------------------------------------
!
!   Cathode Current Collector Thickness - double [m] optional (default = 0.0)
!
!        If this option is turned on, the boundary condition for constant voltage conditions is changed.
!        The boundary condition is turned into a Robin boundary condition.
!        The default resistance of cathode current collector is taken to be the resistance of aluminum.
!
!---------------------------------------------------------------------------------------------------------
! Cathode Current Collector Thickness = 0.01 m
!---------------------------------------------------------------------------------------------------------
!
!   Extra Series Resistance on Cathode - double [Ohms]  optional (default = 0.0)
!
!       When this option is selected a resistor is put in series with the cathode current collector.
!       The resistor is in terms of ohms. Therefore, the cross sectional area of the battery is multiplied
!       into this number within the battery.
!
!     icurr = (Vcath - V_cathCC) / ((resistivity_al * cc_thick) + ExtraResistance * crossSectionArea)
!
!       If a closed loop condition is required, then set V_cathCC to zero.
!
!---------------------------------------------------------------------------------------------------------
! Extra Resistance in Series with Cathode = 0.0 ohms
!---------------------------------------------------------------------------------------------------------
!
!   Number of CVs in Anode Domain - int optional (default = 10)
!
!         If the is not input, then the default is used
!---------------------------------------------------------------------------------------------------------
 Number of CVs in Anode Domain =10
!---------------------------------------------------------------------------------------------------------
!
!   Number of CVs in Separator Domain - int optional (default = 10)
!
!         If the is not input, then the default is used
!---------------------------------------------------------------------------------------------------------
 Number of CVs in Separator Domain =10
!---------------------------------------------------------------------------------------------------------
!
!   Number of CVs in Cathode Domain - int optional (default = 10)
!
!         If the is not input, then the default is used
!---------------------------------------------------------------------------------------------------------
 Number of CVs in Cathode Domain =10
!---------------------------------------------------------------------------------------------------------
!-------------------------------------------------------------------------
!
! Reference Temperature - double (no default) (required)
! 
!-------------------------------------------------------------------------
Reference Temperature = 298.15
!-------------------------------------------------------------------------
!
! Pressure - double [Pressure_unit] (no default) (required)
!
!-------------------------------------------------------------------------
Reference Pressure = 1.0 atm
!-------------------------------------------------------------------------
!
!  Problem Type - int (required)
!
!--------------------------------------------------------------------------
Problem Type = 1
!-------------------------------------------------------------------------
!
!  Cathode BC Type - int (required)
!     0 - Specify a fixed voltage at the cathode
!     1 - Specify a fixed discharge current through the battery
!     2 - Specify a time dependent voltage...must specify time dependence 
!         in main
!--------------------------------------------------------------------------
Cathode BC Type = 1
!-------------------------------------------------------------------------
!
! Discharge Current - double [Amp / cm2] (no default) 
!                         (conditionally required if Problem Type = 1)
!
!     Specify the current in amps per cm2 for the battery.
!     This is only needed when the Problem Type is 1
! units = [Amp/m^2]
!--------------------------------------------------------------------------
Discharge Current = 600.
!-------------------------------------------------------------------------
!
!  Cathode Voltage - double [volts] (no default) (required)
!
!     Specify the initial cathode voltage. Note the anode voltage is
!     always set to 0.0.
!     For a problem type of 0, this is the Dirichlet condition on the
!     cathode voltage. For a problem type of 1, this value is used to
!     set the initial condition of the cathode voltage.
! units = [V]
!--------------------------------------------------------------------------
Cathode Voltage = 3.8 V
!-------------------------------------------------------------------------
!--------------------------------------------------------------------------------------------------------
!
! Porosity Equation Problem Type
!
!    List of available options : boolean
!     There is no porosity
!       None     =                   0x00,
!    There is a constant porosity
!       Constant =                   0x01,
!    It is not constant, but calculated outside of equation system
!       CalculatedOutOfEqnSystem =   0x02,
!    Calculated as a function of the equation system
!       CalculatedInEqnSystem  =     0x04,
!    There are mechanics calculations which change the porosity
!       PartOfMechanics =            0x08,
!    Added phases are in the equation system. These may be nucleation phases
!       AddedPhasesInEqnSystem =     0x16
!
!--------------------------------------------------------------------------------------------------------
Porosity Equation Type = Calculated Out Of Equation System
!--------------------------------------------------------------------------------------------------------
!
! DAKOTA INTERFACE (optional)
! 
! Turn on the interface with Dakota
!-------------------------------------------------------------------------
! Use Dakota Interface = TRUE
!-------------------------------------------------------------------------
!
! Optional names of Dakota interface files.
!
! File name to receive parameters from Dakota:
!  Dakota Parameters File Name = [ filename (default = 'params.in') ]
!-------------------------------------------------------------------------
! Dakota Parameters File Name = params.in
!-------------------------------------------------------------------------
!
! File name to receive parameters from Dakota:
!  Dakota Results File Name = [ filename (default = 'results.out') ]
!-------------------------------------------------------------------------
! Dakota Results File Name = results.out
!-------------------------------------------------------------------------
!-------------------------------------------------------------------------
!  Nonlinear Solver Inputs
!-------------------------------------------------------------------------
!
! Simulation start time  [s]
!
!-------------------------------------------------------------------------
Start Time = 0.0
!-------------------------------------------------------------------------
! 
! Simulation end time  [s]   - 60 minutes
!
!-------------------------------------------------------------------------
End Time = 0.001
!-------------------------------------------------------------------------
!
! Initial Time Step [s]
!
!-------------------------------------------------------------------------
Initial Time Step = 1e-8
!-------------------------------------------------------------------------
!
! Absolute Tolerances for time integration 
!
!-------------------------------------------------------------------------
Absolute Tolerance = 1e-8
!-------------------------------------------------------------------------
!
! Relative Tolerances for time integration 
!
!-------------------------------------------------------------------------
Relative Tolerance = 1e-3
!-------------------------------------------------------------------------
!
! Maximum Time step - double (optional)
!
!  Simulation maximum time step
!
!---------------------------------------------------------------------------------------
Maximum Time Step = 25.0
!-------------------------------------------------------------------------
Maximum Number of Time Steps = 1000
!
!   Set the level of printing that occurs for each time step
!
! Level of solution printing done to stdout
!
!   0 -> Don't print anything
!   1 -> Print only about significant issues going on
!   2 -> Print status information at regular intervals.
!   3 -> Print ShowSolution at regular intervals
!   4 -> Print ShowSolution at all successful time steps
!   5 -> Print additional information at each time step
!   6 -> Print some information about each electrode object at each time step
!   7 -> Print a lot of information about each electrode object at
!        each time step
!
!-------------------------------------------------------------------------
Solution Behavior Print Level = 5
!-------------------------------------------------------------------------
!
!  Time Stepper Print Level - int (optiona)
!  Block Input for the time stepper
!  Set the level of printing that occurs for each time step
!
!   0 -> absolutely nothing is printed for a single time step.
!   1 -> One line summary per time step
!   2 -> short description, points of interest
!   3 -> More printed per time step -> major algorithm issues are displayed
!   4 -> Additional time step error control information is printed out
!        One line summary of the nonlinear solve
!   5 -> Summaries of the nonlinear solve iterates are printed out
!   6 -> Algorithm information on the nonlinear iterates are printed out
!   7 -> Additional info on the nonlinear iterates are printed out
!   8 -> Additional info on the linear solve is printed out.
!   9 -> Info on a per iterate of the linear solve is printed out.
!
!-------------------------------------------------------------------------
Time Stepper Print Level = 6
!-------------------------------------------------------------------------
!
!    Nonlinear Solver Log Level - int (optional)
!    Block Input For the nonlinear solver log level
!
!  -1 -> Takes the value that the time stepper printLvl wants
!   0 -> absolutely nothing is printed for a single nonlinear call
!   1 -> One line summary per solve_nonlinear call
!   2 -> short description, points of interest: Table of nonlinear solve - one line per iteration
!   3 -> Table is included -> More printing per nonlinear iteration (default) that occurs during the table
!   4 -> Summaries of the nonlinear solve iteration as they are occurring -> table no longer printed
!   5 -> Algorithm information on the nonlinear iterates are printed out
!   6 -> Additional info on the nonlinear iterates are printed out
!   7 -> Additional info on the linear solve is printed out.
!   8 -> Info on a per iterate of the linear solve is printed out.
!
!-------------------------------------------------------------------------
Nonlinear Solver Log Level = 3
!--------------------------------------------------------------------------
!
!   Anode TemperatureBC Type - int (not required)
!       -1 - not set -> same as an adiabatic boundary condition
!        0 - Specify a fixed temperature at the anode
!        1 - Specify a fixed heat flux through the battery
!        2 - Time dependent temp at the anode
!       10 - Specify heat transfer coeff temperature bc.
!---------------------------------------------------------------------------------------------------------
Anode TemperatureBC Type = 10
!---------------------------------------------------------------------------------------------------------
!
!    Anode Collector Temperature - double (not required)
!               (default = 298.15
!---------------------------------------------------------------------------------------------------------
Anode Collector Temperature = 298.15
!---------------------------------------------------------------------------------------------------------
!
!  Anode Heat Transfer Coefficient - double (not required)
!          Units = Watts m-2 K-1
!                ( default = 1000 )
!---------------------------------------------------------------------------------------------------------
Anode Heat Transfer Coefficient = 0.184
!---------------------------------------------------------------------------------------------------------

!
!   Cathode Temp BC Type - int (not required)
!       -1 - not set -> same as an adiabatic boundary condition
!        0 - Specify a fixed temperature at the anode
!        1 - Specify a fixed heat flux through the battery
!        2 - Time dependent temp at the anode
!       10 - Specify heat transfer coeff temperature bc.
!---------------------------------------------------------------------------------------------------------
Cathode TemperatureBC Type = 10
!---------------------------------------------------------------------------------------------------------
!
!   Cathode Collector Temperature - double (not required)
!               (default = 298.15
!---------------------------------------------------------------------------------------------------------
Cathode Collector Temperature = 298.15
!---------------------------------------------------------------------------------------------------------
!
! Cathode Heat Transfer Coefficient - double (not required)
!        Units = Watts m-2 K-1
!                ( default = 1000 )
!---------------------------------------------------------------------------------------------------------
Cathode Heat Transfer Coefficient = 0.184
!---------------------------------------------------------------------------------------------------------

Start Block Extra Phase = anode_binder
    Phase Name = AnodeBinder
    Cantera File Name = binder.xml
    Region =  anode 
    Volume Fraction =  0.03
End Block Extra Phase

Start Block Extra Phase = cathode_binder
    Phase Name = CathodeBinder
    Cantera File Name = binder.xml
    Region =   cathode
    Volume Fraction =  0.10
End Block Extra Phase

Start Block Extra Phase = extra_stuff
    Phase Name = ExtraStuff
    Cantera File Name = binder.xml
    Region = all
    Volume Fraction =  0.10
End Block Extra Phase


!
