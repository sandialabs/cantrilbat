#!/bin/sh
#
#
# Copywrite 2004 Sandia Corporation. Under the terms of Contract
# DE-AC04-94AL85000, there is a non-exclusive license for use of this
# work by or on behalf of the U.S. Government. Export of this program
# may require a license from the United States Government.
#

.SUFFIXES: .d

PROGRAM = LiIon_PorousBat
TEST_NAME = LiIon_MCMB_LiCoO2_Diff2

DATA =  \
ECsoln_ion.xml  LiCoO2Cathode_electrode.xml  LiCoO2_Margules_1.xml  Li_Metal.xml\
MCMBAnode_electrode.xml  MCMB_RedlichKister.xml  metal_Li_LiIon_electrons.xml  MgO.xml 


BLESSED_FILES = \
BulkDomain1D_0_blessed.dat  BulkDomain1D_2_blessed.dat  SurDomain1D_0_blessed.dat  SurDomain1D_2_blessed.dat  timeDep_IV_blessed.dat \
BulkDomain1D_1_blessed.dat  solution_blessed.xml        SurDomain1D_1_blessed.dat  SurDomain1D_3_blessed.dat

TEST_FLAGS = runGood runBad runInProgress.txt

TEST_INTERMEDIATES = diff_b0.txt  diff_b1.txt  diff_b2.txt  diff_IV.txt  diff_out.txt  diff_s0.txt \
                     diff_s3.txt  diff_summary.txt  diff_xml.txt err_out.txt outa.txt out_raw.txt

TEST_RESULTS =  out.txt \
  BulkDomain1D_1.dat          Capacity_Starting.dat      SurDomain1D_0.dat      SurDomain1D_3.dat \
  BulkDomain1D_0.dat      solution_multiBulk.dat     SurDomain1D_2.dat  \
  BulkDomain1D_2.dat      SurDomain1D_1.dat          timeDep_IV.dat solution.xml


INPUT_FILES = anode.inp  cathode.inp  LiIon_PorousBat.inp


PROGRAM_ORIGIN = ../../src_LiIon_PorousBat/$(PROGRAM)

PURIFY=@PURIFY@

# These links are to Cantera's install space
CT_INCROOT =  @ct_incroot@

#
# Bring in the Cantera includes through the .mak file
#
include $(CT_INCROOT)/cantera/Cantera.mak

all:  $(PROGRAM)

$(PROGRAM):
	ln -s $(PROGRAM_ORIGIN) .


test:
	@$(MAKE) -s
	@echo -n 'Checking need to run test $(TEST_NAME): '
	@$(MAKE) -q -s  runGood ; ss=$$? ; if test $$ss = "0" ; then echo '   NOT NEEDED' ; else  $(MAKE) -s  runGood ; fi

runGood: $(PROGRAM_ORIGIN) $(DATA) Makefile $(BLESSED_FILES)
	@echo 'RUNNING TEST ' $(TEST_NAME)
	( export XMLSOLNDIFF=../../src_test/xmlSolnDiff ; ../runtest)

rebaseline:
	./rebaseline.sh



# Clean up temporary files, but don't touch test run results
clean:
	$(RM) $(TEST_FLAGS) $(PROGRAM)

# Clean up all output from the test run
clean_test:
	$(RM) $(TEST_RESULTS) $(TEST_INTERMEDIATES) $(TEST_FLAGS) $(PROGRAM)

# Revert directory to its pristine condition
test_dist:
	$(MAKE) test_clean


