#!/bin/sh
#########################################################################
#
#  Makefile input to compile the utility source library for CADS
#
#  $Id: Makefile.in,v 1.10 2010/07/22 16:43:19 hkmoffa Exp $
#
#  Copywrite 2004 Sandia Corporation. Under the terms of Contract
#  DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government
#  retains certain rights in this software.
#  See file License.txt for licensing information.
#
#########################################################################

#########################################################################
#        Changes to Make setup
#                need .mak to avoid dependency on .depends
#########################################################################

.SUFFIXES: .d .mak

#########################################################################
#         Common Commands
#########################################################################

AR = ar
RM = /bin/rm -f
CP = /bin/cp -f -p

#########################################################################
#           Setup The Cantera Directory locations
#########################################################################
#
# These links are to Cantera's install space
CT_INCROOT =  @ct_incroot@

CT_BIN = @ct_bindir@

CT_LIB = @ct_libdir@


do_immediate_install = 0
#
# Bring in the Cantera includes through the .mak file
#
include $(CT_INCROOT)/cantera/Cantera.mak
#
INCDIR = $(CT_INCROOT)/util_src

DESTLIBDIR=$(CT_LIB)/util_src

#INSTALL_TSC = $(CT_BIN)/install_tsc
INSTALL_TSC = @abs_top_builddir@/bin/install_tsc
have_posix = @have_posix@
#
####################################################################
#  Description of Files Comprising the Library
####################################################################

# the name of the executable program to be created
LIBP = libutil_src.a

# the object files to be linked together. List those generated from Fortran
# and from C/C++ separately
LIBOBJS = mdp_allo.o sort.o tok_input_util.o tok_readFile.o LE_LineEntry.o \
	  BI_InputError.o BE_MoleComp.o BE_StrDbl.o LE_OneDblUnits.o \
          LE_OneStr.o LE_PickList.o  LE_StrListDbl.o LE_VecDbl.o \
          LE_OneBoolInt.o LE_OneDbl.o md_timer.o LE_OneInt.o \
          LE_OneBool.o BE_BlockEntry.o BaseEntry.o BE_MultiBlock.o BE_MultiBlockNested.o \
	  BE_UnitConversion.o BE_UnitConversionPressure.o \
          BE_UnitConversionLength.o BE_UnitConversionConcentration.o \
          BE_UnitConversionEnergy.o BI_Dependency.o \
          LE_OneCStr.o LE_MultiCStr.o BE_MolalityComp.o \
          sortAlgorithms.o LE_VecDblVarLength.o BI_DepIntMaxMin.o \
          subtractRD.o LE_StdVecDbl.o LE_StdVecDblVarLength.o \
          BE_StrVecDbl.o BE_MoleComp_VecDbl.o clockWC.o clockID.o

ifeq ($(have_posix), 1)
LIBOBJS += clockID.o
endif

INCFILES = BaseEntry.h sort.h  BE_UnitConversion.h BE_BlockEntry.h LE_OneInt.h \
          mdp_allo.h BE_MolalityComp.h  BE_UnitConversionLength.h  \
          LE_MultiCStr.h LE_OneStr.h  md_timer.h BE_MoleComp.h \
          BE_UnitConversionPressure.h  LE_OneBool.h LE_PickList.h  \
          sortAlgorithms.h BE_MultiBlock.h BE_MultiBlockNested.h BI_Dependency.h LE_OneBoolInt.h \
          LE_StrListDbl.h  tok_input_util.h BE_StrDbl.h BI_DepIntMaxMin.h \
          LE_OneCStr.h LE_VecDbl.h  tok_readFile.h BE_UnitConversionConcentration.h \
          BI_InputError.h LE_OneDbl.h LE_VecDblVarLength.h \
          BE_UnitConversionEnergy.h BlockEntryGlobal.h  LE_OneDblUnits.h  LE_LineEntry.h \
          LE_StdVecDbl.h  LE_StdVecDblVarLength.h \
          BE_StrVecDbl.h BE_MoleComp_VecDbl.h clockWC.h clockID.h

ifeq ($(have_posix), 1)
INCFILES += clockID.h
endif

DEPENDS=$(LIBOBJS:.o=.d)

####################################################################
#    Compiler Setup
####################################################################

PURIFY=@PURIFY@

os_solaris= @os_solaris@
ifeq ($(os_solaris), 1)
   LDEFINES=-DSOLARIS
else
   LDEFINES=
endif


# the C++ compiler
CXX = @CXX@

# C++ compile flags
CXX_FLAGS = @CXXFLAGS@  $(CXX_OPT) $(LDEFINES)

# The directory where Cantera include files may be found.
CANTERA_INCDIR=  
# Flags passed to the C++ compiler/linker for the linking step
LCXX_FLAGS =  @CXXFLAGS@

# How to compile C++ source files to object files
.cpp.o:
	$(PURIFY) $(CXX) -c $< $(CXX_FLAGS)

%.d:
	@CXX_DEPENDS@ -I$(CANTERA_INCDIR) $(CXX_FLAGS) $*.cpp > $*.d

####################################################################
#  Description of make all
####################################################################

all: $(LIBP) .depends
ifeq ($(do_immediate_install),1)
	@INSTALL@ -d $(INCDIR)
	(for lh in $(INCFILES) ; do \
          $(INSTALL_TSC) "$${lh}" $(INCDIR) ; \
        done)
	@INSTALL@ -d $(DESTLIBDIR)
	$(INSTALL_TSC) $(LIBP) $(DESTLIBDIR)
endif



$(LIBP): $(LIBOBJS) Makefile
	$(AR) rv $(LIBP) $(LIBOBJS)

$(LIBOBJS): Makefile

$(DEPENDS): Makefile

####################################################################
#     Other Executable Rules
####################################################################

test:

install:
	@INSTALL@ -d $(INCDIR)
	(for lh in $(INCFILES) ; do \
          $(INSTALL_TSC) "$${lh}" $(INCDIR) ; \
        done)
	@INSTALL@ -d $(DESTLIBDIR)
	$(INSTALL_TSC) $(LIBP) $(DESTLIBDIR)

clean:
	$(RM) $(LIBOBJS) *.o *.a $(LIBP) *.d .depends

dist_clean:
	$(RM) $(LIBOBJS) $(LIBP) *.d .depends
	(for lh in $(INCFILES) ; do \
          $(RM)  $(INCDIR)/$${lh} ; \
        done)
	$(RM) $(DESTLIBDIR)/$(LIBP)

depends: 
	$(RM) *.d .depends
	$(MAKE) .depends

.depends: $(DEPENDS)
	cat $(DEPENDS) > .depends

TAGS:
	etags *.h *.cpp

####################################################################
#    File inclusions 
####################################################################

ifeq ($(wildcard .depends), .depends)
include .depends
endif

####################################################################
#    The End
####################################################################

