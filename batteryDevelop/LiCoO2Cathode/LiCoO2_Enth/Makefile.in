#!/bin/sh
#

.SUFFIXES: .d

PROGRAM = LiCoO2Thermo

BLESSED_FILES = LiCoO2_blessed.out  LiCoO2Thermo_blessed.out

DATA = \
ECsoln_ion.xml                        LiCoO2_Margules_1_1.xml     LiCoO2_Margules_1.xml     metal_Li_LiIon_electrons.xml\
LiCoO2Cathode_electrode_extra.xml         LiCoO2_RedlichKister.xml \
LiCoO2Cathode_electrode_M_extra.xml  LiCoO2Cathode_electrode.xml        Li_Metal.xml \

OBJ = $(PROGRAM).o

##########################################################################
#           Setup The Cantera Directory locations
#########################################################################

PURIFY=@PURIFY@

# These links are to Cantera's install space
CT_INCROOT =  @ct_incroot@

ABSTOP_DIR = @abs_top_builddir@

#
# Bring in the Cantera includes through the .mak file
#
include $(CT_INCROOT)/cantera/Cantera.mak
#
# Source tree base for cantera_apps
#
CT_ROOT = @ct_prefix@
UTILSRC_DIR = $(ABSTOP_DIR)/util_src/src
UTILSRC_INC = $(UTILSRC_DIR)
UTILSRC_DEP = $(UTILSRC_DIR)/libutil_src.a
UTILSRC     = -L$(UTILSRC_DIR) -lutil_src

#
# Set up the Cantera addition library
#
CTPADDS_DIR =  $(ABSTOP_DIR)/ctpadds/src
CTPADDS_INC = $(CTPADDS_DIR)
CTPADDS_DEP = $(CTPADDS_DIR)/libctpadds.a
CTPADDS_LIB = -L$(CTPADDS_DIR) -lctpadds
#
# Set up the Cantera Application Base directory
#
ELECTRODE_DIR = $(ABSTOP_DIR)/Electrode/src
ELECTRODE_INC = $(ELECTRODE_DIR)
ELECTRODE_DEP =  $(ELECTRODE_DIR)/libElectrode.a
ELECTRODE_LIB = -L$(ELECTRODE_DIR) -lElectrode
#
#########################################################################
# Set up the various local and global defines
########################################################################
LDEFINES = -DDEBUG
GDEFINES =
#
# Set up the global include directory macro
#
INCLUDE_DIRS = $(CANTERA_TOTAL_INCLUDES) -I$(ELECTRODE_INC) -I$(UTILSRC_INC)  -I$(CTPADDS_INC)

all: .dependsT LiCoO2 LiCoO2Thermo LiCoO2Thermo_M

LDR = $(F77LDR)
LDRFLAGS = $(F77LDRFLAGS)
LDRFLAGS_DEBUG = -g -y $(FFLAGS_BSD)

CCFLAGS =   $(LDEFINES) $(INCLUDE_DIRS) $(GDEFINES)

OBJ_ALL = $(OBJ) LiCoO2.o LiCoO2Thermo_M.o

OBJ_ANODE =  $(OBJ)

############################################################################
# section to set up compiler rules
###########################################################################
#
# the C++ compiler
#
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
LCXX_FLAGS = @LCXX_FLAGS@
LCXX_END_LIBS = @LCXX_END_LIBS@
CXXLDR = $(CXX)
#
# C compiler
#
CC = @CC@
CFLAGS = @CXXFLAGS@
#
# Both the C and C++ compiler predefines
#
CCFLAGS =  $(GDEFINES) $(INCLUDE_DIRS) $(LDEFINES) 
#
.c.o:
	$(PURIFY) $(CC) $(CFLAGS) $(CCFLAGS) -c $<
.cpp.o:
	$(PURIFY) $(CXX) $(CXXFLAGS) $(CCFLAGS) -c $<

############################################################################
# section to set up depends
###########################################################################
DEPENDS = $(OBJ_ALL:.o=.d) 

.cpp.d:
	@CXX_DEPENDS@ $(CXXFLAGS) $(CCFLAGS) -c $*.cpp > $*.d

.c.d:
	@CXX_DEPENDS@ $(CXXFLAGS) $(CCFLAGS) -c $*.c > $*.d

depends:
	$(RM) $(DEPENDS)
	$(MAKE) .dependsT

.dependsT: $(DEPENDS)
	cat *.d > .depends
	touch .dependsT

test: 
	@$(MAKE)
	@echo -n 'Checking need to run test ' $(TESTNAME) ': '
	@$(MAKE) -q -s  runGood ; ss=$$? ; if test $$ss = "0" ; then echo '   NOT NEEDED' ; else  $(MAKE) -s runGood ; fi

runGood: $(PROGRAM) $(DATA) Makefile $(BLESSED_FILES)
	  @echo 'RUNNING TEST ' $(TESTNAME)
	  runtest

rebaseline:
	cp out.txt good_out.txt
	cp LiCoO2_intResults_0_0.csv LiCoO2_intResults_blessed_0_0.csv
	cp  LiCoO2_globalResults_0_0.csv   LiCoO2_globalResults_blessed_0_0.csv 
	cp  LiCoO2Thermo.out   LiCoO2Thermo_blessed.out 
	cp ccout.txt good_ccout.txt
	cp  LiCoO2_CC_globalResults_0_0.csv  LiCoO2_CC_globalResults_blessed_0_0.csv 
	cp LiCoO2_CC_intResults_0_0.csv LiCoO2_CC_intResults_blessed_0_0.csv


$(OBJ_ALL): Makefile

$(DEPENDS): Makefile


LiCoO2Thermo: LiCoO2Thermo.o  $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(ELECTRODE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o LiCoO2Thermo LiCoO2Thermo.o  \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

LiCoO2Thermo_M: LiCoO2Thermo_M.o $(UTILSRC_DEP) \
               $(CANTERA_CORE_LIBS_DEP) $(CTPADDS_DEP) $(ELECTRODE_DEP)
	$(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o LiCoO2Thermo_M LiCoO2Thermo_M.o  \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

LiCoO2:	LiCoO2.o
	 $(PURIFY) $(CXXLDR) $(LCXX_FLAGS) -o LiCoO2 LiCoO2.o \
                  $(ELECTRODE_LIB) $(CTPADDS_LIB) $(UTILSRC) $(CANTERA_TOTAL_LIBS) \
                  $(LCXX_END_LIBS) 

clean:
	$(RM) *.o  .depends *.d *~  $(PROGRAM) LiCoO2 LiCoO2Thermo LiCoO2Thermo_M 


ifeq ($(wildcard .depends), .depends)
include .depends
endif


